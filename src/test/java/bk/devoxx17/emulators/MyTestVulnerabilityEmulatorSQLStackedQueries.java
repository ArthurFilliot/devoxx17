package bk.devoxx17.emulators;

import java.sql.SQLException;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import bk.devoxx17.test.DatabaseSQLHelper;
import bk.devoxx17.utils.DatabaseSQL;

public class MyTestVulnerabilityEmulatorSQLStackedQueries extends AbstractTestVulnerabilityEmulator {
		
	public MyTestVulnerabilityEmulatorSQLStackedQueries() {
		emulator = new VulnerabilityEmulatorSQLStackedQueries(DatabaseSQLHelper.getDb());
		breakingMethod = InjectionMethod.STACKED_QUERIES;
	}
	 
	@Before
	public void init() throws SQLException {
		DatabaseSQLHelper.init();
		DatabaseSQL db = DatabaseSQLHelper.getDb();
		String createSchema = db.getScript("/sql/schema.sql");
		String insertUsers = db.getScript("/sql/users.sql");
		db.executeScript(createSchema);
		db.executeScript(insertUsers);
	}

	@After
	public void terminate() {
		DatabaseSQLHelper.terminate();
	}
	
//	@Test
//	public void checkDb() throws SQLException {
//		DatabaseSQL db = DatabaseSQLHelper.getDb();
//		db.executeSelection("SELECT * from Users");
//	}
//
//	@Override
//	@Test
//	public void testCheck_Ok() {
//		super.testCheck_Ok();
//		DatabaseSQL db = DatabaseSQLHelper.getDb();
//		try {
//			db.executeSelection("SELECT * from Users");
//		} catch (SQLException e) {
//			e.printStackTrace();
//		}
//	}

}
